<!--*************************  CustomOreGen Configuration *****************************************
:set ts=4 sw=4 expandtab ai
*
*   CustomOreGen allows you to customize the generation of Ore within your worlds.  This file
*   contains a list of "distributions", which place a specific block according to a specific
*   algorithm.  You can have as many distributions as you want, including multiple distributions for
*   the same block type.
*   
*   There are four basic algorithms available, "StandardGen", "Susbstitute", "Veins", and "Cloud".
*
*   New: 2013/04/29: Add the following features:
*       1. Rules specific to dimension 0 that do not override all ages or sub-worlds.
*       2. (WIP) New distribution: SmallVeins. Smaller motherlodes, shorter veins, and more common.
*       3. Config version tracking.
*       4. (WIP) Mystcraft ages get a random choice of distributions, without using the Mystcraft API
*           (Permits using Mystcraft 0.10.1 and 1.4.7 without requiring that every world is overworld-like)
*
*   This file is written in XML.  All names and values are ***CASE SENSISTIVE***.  
*
*   For details on how to edit this file, please see the online CustomOreGen documentation:
*
*       http://customoregen.shoutwiki.com/wiki/Main_Page
*
***********************************************************************************************-->
<Config>

    <ConfigSection>
        <Comment>
            Emeralds spawn in extreme hills. This is vanilla behavior that cannot be overriden.
            The 147 behavior was to use substitute to wipe this all out; we can't do that for
            162 and mystcraft or twilight forest (both have ground treasure deposits).

            So we have to track where emeralds can spawn. In theory, that would be the "Mountain"
            biome type. In practice, however, that includes stuff that we don't want.

            In general: List a biome here if it is a mod extreme hill where emeralds should be added.
            Exclude vanilla E.H. as there is already emeralds there.
        </Comment>

        <Comment>
            The best way I can think of: List all the vanilla biomes here; exclude them out of mountains later.
            This is a little pain; 1.7 users can have fun here.
        </Comment>

        <BiomeSet name='VanillaBiomes'>
            <Biome name='Beach' />
            <Biome name='Desert' />
            <Biome name='DesertHills' />
            <Biome name='Extreme Hills' />
            <Biome name='Extreme Hills Edge' />
            <Biome name='Forest' />
            <Biome name='ForestHills' />
            <Biome name='FrozenOcean' />
            <Biome name='FrozenRiver' />
            <Biome name='Hell' />
            <Biome name='Ice Mountains' />
            <Biome name='Ice Plains' />
            <Biome name='Jungle' />
            <Biome name='JungleHills' />
            <Biome name='MushroomIsland' />
            <Biome name='MushroomIslandShore' />
            <Biome name='Ocean' />
            <Biome name='Plains' />
            <Biome name='River' />
            <Biome name='Sky' />
            <Biome name='Swampland' />
            <Biome name='Taiga' />
            <Biome name='TaigaHills' />
        </BiomeSet>

        <BiomeSet name='EmeraldExtremeModHills'>
            <BiomeType name='Mountain' />
            <BiomeSet inherits='VanillaBiomes' weight='-1'/>
            <Biome name='Highlands' />    <!-- Twilight Forest; not "Mountain", but the closest that mod has. -->
        </BiomeSet>
    </ConfigSection>

    <!--************************   Global Config Options   *********************************
    *   Below are options to control the general behavior of all distributions.
    *************************************************************************************-->
    <ConfigSection>
    
        <OptionDisplayGroup name='groupGeneral' displayName='General' displayState='shown'>
            <Description> 
                Options affecting all ore distributions.
            </Description>
        </OptionDisplayGroup>
    
        <OptionDisplayGroup name='groupConstants' displayName='Constants' displayState='hidden'>
            <Description> 
                Ore constants. Multipliers for the presets.
            </Description>
        </OptionDisplayGroup>
        
<!-- We have a big change here.
We want to have dimension 0 behave differently. To do that, we cannot use a numeric option that
is defined in dimension zero. If we do, it will override every age.

This same trick is used for the ore specifics in Minecraft Ores

Additional change:
In dimensions other than 0, mushroom island ore spawns are reduced by 90%. Yes, I'm looking at
you, mystcraft cave worlds, single biome mushroom island with extras.
-->

        <OptionNumeric min='0' max='999' displayState='hidden' displayGroup='groupConstants'>
        <name> Version </name>
        <default> 1 </default>
        </OptionNumeric>

<IfCondition condition=':= (dimension.id != 0)' > 
    <Then>
        <OptionNumeric name='oreFreq' default='1' min='0' max='5' displayState='shown' displayGroup='groupGeneral'>
            <Description> 
                A global multiplier for the frequency of all ore distributions. 
            </Description>
            <DisplayName>Ore Frequency</DisplayName>
        </OptionNumeric>
    </Then> <Else>
        <OptionNumeric name='dim0oreFreq' default='0.50' min='0' max='5' displayState='shown' displayGroup='groupGeneral'>
            <Description> 
                A global multiplier for the frequency of all ore distributions. 
            </Description>
                <!-- Much shorter veins, slightly smaller size, slightly higher frequency. 
                    Should be about 1/2 as much ores in the overworld, to encourage using
                    mystcraft ages or twilight forest for mining, and overworld for building. -->
                    <!-- And, now we have new, shorter, smaller, more frequent veins as the
                        base for the overworld, so all we cut back on is the frequency. -->
            <DisplayName>Ore Frequency</DisplayName>
        </OptionNumeric>
    </Else>
</IfCondition>

<!--
        <OptionNumeric min='0' max='5' displayState='shown' displayGroup='groupGeneral'>
    <IfCondition condition=':= (dimension.id != 0)' > 
        <Then>
            <name> oreSize </name>
            <default> 1.0 </default>
        </Then> <Else>
            <name> dim0oreSize </name>
            <default> 1.00 </default>
        </Else>
    </IfCondition>
            <Description> 
                A global multiplier for the size of all ore distributions. 
            </Description>
            <DisplayName>Ore Deposit Size</DisplayName>
        </OptionNumeric> 
-->

<IfCondition condition=':= (dimension.id != 0)' > 
    <Then>
        <OptionNumeric name='oreSize' default='1' min='0' max='5' displayState='shown' displayGroup='groupGeneral'>
            <Description> 
                A global multiplier for the size of all ore distributions. 
            </Description>
            <DisplayName>Ore Deposit Size</DisplayName>
        </OptionNumeric> 
    </Then> <Else>
        <OptionNumeric name='dim0oreSize' default='1.00' min='0' max='5' displayState='shown' displayGroup='groupGeneral'>
            <Description> 
                A global multiplier for the size of all ore distributions. 
            </Description>
            <DisplayName>Ore Deposit Size</DisplayName>
        </OptionNumeric> 
    </Else>
</IfCondition>

<!--
        <OptionNumeric min='0' max='5' displayState='shown' displayGroup='groupGeneral'>
    <IfCondition condition=':= (dimension.id != 0)' > 
        <Then>
            <name> oreLength </name>
            <default> 1 </default>
        </Then> <Else>
            <name> dim0oreLength </name>
            <default> 1 </default>
        </Else>
    </IfCondition>
            <Description> 
                A global multiplier for the length of all ore veins. 
            </Description>
            <DisplayName>Ore Vein Length</DisplayName>
        </OptionNumeric> 
-->

<IfCondition condition=':= (dimension.id != 0)' > 
    <Then>
        <OptionNumeric name='oreLength' default='1' min='0' max='5' displayState='shown' displayGroup='groupGeneral'>
            <Description> 
                A global multiplier for the length of all ore veins. 
            </Description>
            <DisplayName>Ore Vein Length</DisplayName>
        </OptionNumeric> 
    </Then> <Else>
        <OptionNumeric name='dim0oreLength' default='1' min='0' max='5' displayState='shown' displayGroup='groupGeneral'>
            <Description> 
                A global multiplier for the length of all ore veins. 
            </Description>
            <DisplayName>Ore Vein Length</DisplayName>
        </OptionNumeric> 
    </Else>
</IfCondition>

        <OptionChoice name='debugMode' default='false' displayState='shown_dynamic' displayGroup='groupGeneral'>
            <Description> 
                Enable/disable debugging mode, which allows the use of in-game wireframe models and console commands.  Also controls the visibility of some advanced options.
            </Description>
            <Comment>           
                This is a "magic" option - it has meaning outside of this file in the COG engine itelf.  You can change the value, obviously, but do not remove the option itself or change the possible values.
            </Comment>
            <DisplayName>Debugging Mode</DisplayName>
            <Choice value='true' displayValue='On'/>
            <Choice value='false' displayValue='Off'/>
        </OptionChoice> 

        <OptionChoice name='vanillaOreGen' default='false' displayGroup='groupGeneral'>
            <Description> 
                Enable/disable the vanilla ore generators for coal, iron, gold, redstone, lapis lazuli, and diamond.  
            </Description>
            <Comment>     
                This is a "magic" option - it has meaning outside of this file in the COG engine itelf. You can change the value, but do not remove the option itself.  Recommended values are True/On for new worlds and False/Off for pre-1.4.2 worlds (for compatibility).
                ** Change! For 1.6.2, to support mystcraft's (and twilight forest)'s ore deposits, this now
                defaults to false -- do not do normal ore generation. Normal "substitute wipe out" is not done.
                This means that the ores in the ground are either specials, treasures, or vanilla emeralds in E.H.
            </Comment>
            <Comment>
                This option completely prevents these ores from being spawned by the vanilla terrain generator. It is more efficient than a Substitute distribution, which lets the generator place an ore and then removes it.  However, for technical reasons this option cannot disable vanilla emerald generation. It also has mixed results with mod generation - mods that recycle the vanilla generator get disabled, while those that use their own do not.  Finally, it is an "all-or-nothing" approach that doesn't distinguish between ore types or world properties.  For these reasons this option defaults to "true", and a Substitute distribution is used below to selectively remove the vanilla ore deposits as needed.
                **
                The 1.6.2 change: mods that reuse vanilla generator will not generate, and need COG distributions.
                Mods that use their own generation either get only that, or a selective substitute (and cannot be
                used in mystcraft or twilight specials.)
            </Comment>
            <DisplayState>:= if(?debugMode,"shown","hidden")</DisplayState>
            <DisplayName>Vanilla Ore Gen.</DisplayName>
            <Choice value='true' displayValue='On'/>
            <Choice value='false' displayValue='Off'/>
        </OptionChoice> 

        <OptionNumeric name='deferredPopulationRange' displayGroup='groupGeneral'>
            <default>:= if(?vanillaOreGen, '32', '0') </default>
            <Description> 
                How much area around a chunk must be generated before COG will add ores to it. 
            </Description>
            <Comment>
                This is a "magic" option - it has meaning outside of this file in the COG engine itelf.  You can change the value, but do not remove the option itself or change the allowed range.  Changing this value is really not recommended unless you know what you are doing.
            </Comment>
            <DisplayState>:= if(?debugMode,"shown","hidden")</DisplayState>
            <DisplayName>Deferred Chunk Gen. Range</DisplayName>
            <Min>0</Min>
            <Max>128</Max>
            <DisplayIncrement>16</DisplayIncrement>
        </OptionNumeric> 

        <OptionChoice name='drawWireframes' default='false' displayGroup='groupGeneral'>
            <Description> 
                Default wireframe state for distributions.  
            </Description>
            <Comment>    
                Enabling this is only one of the requirements to actually use wireframes - debugging mode must be on and the client must have Forge and COG installed, cheats enabled, and the wireframe rendering mode set up.       
            </Comment>
            <DisplayState>:= if(?debugMode,"shown","hidden")</DisplayState>
            <DisplayName>Distribution Wireframes</DisplayName>
            <Choice value='true' displayValue='On'/>
            <Choice value='false' displayValue='Off'/>
        </OptionChoice>     
        
        <OptionChoice name='debugDist' default='false' displayGroup='groupGeneral'>
            <Description> Enable/disable testing distributions. </Description>
            <DisplayState>:= if(?debugMode,"shown","hidden")</DisplayState>
            <DisplayName>Test Distributions</DisplayName>
            <Choice value='true' displayValue='On'/>
            <Choice value='false' displayValue='Off'/>
        </OptionChoice>   
        
    </ConfigSection>
    
    <!--*******************************   Presets   ****************************************
    *   Below are useful "preset" distributions.  These don't generate any ore by themselves, 
    *   but they can be used as a base for other distributions.
    *************************************************************************************-->
    <ConfigSection>

        <OptionNumeric min='0' max='999' displayState='hidden' displayGroup='groupConstants'>
        <name> _C_ClusterFreq </name>
        <default> 20 </default>
        </OptionNumeric>

        <OptionNumeric min='0' max='999' displayState='hidden' displayGroup='groupConstants'>
        <name> _C_ClusterSize </name>
        <default> 8 </default>
        </OptionNumeric>

        <OptionNumeric min='0' max='999' displayState='hidden' displayGroup='groupConstants'>
        <name> _C_MushroomRate </name>
        <description> Adjust the rate of ore spawning in Mystcraft ages, mushroom biomes, to
                        prevent abuse. </description>
        <default> 0.1 </default>
        </OptionNumeric>

<!--
        <StandardGenPreset name='PresetStandardGen'>   
            <Description>
                A master preset for standardgen ore distributions.
            </Description>
        <IfCondition condition=':= (dimension.id != 0)' > 
            <Then>
                <Setting name='Size' range='0' avg=':= _C_ClusterSize * oreSize' />
            </Then> <Else>
                <Setting name='Size' range='0' avg=':= _C_ClusterSize * dim0oreSize' />
            </Else>
        </IfCondition>
            <Setting name='Frequency' range='0'> 
                <IfCondition condition=':= (dimension.id != 0)' > 
                    <Then>
                        <avg> ':= _C_ClusterFreq * oreFreq' </avg>
                    </Then> <Else>
                        <avg> ':= _C_ClusterFreq * dim0oreFreq' </avg>
                    </Else>
                </IfCondition>
            </Setting>
            <Setting name='Height' avg=':= 64/64 * dimension.groundLevel' range=':= 64/64 * dimension.groundLevel'/> 
            <Setting name='ParentRangeLimit' avg='32' range='32' type='normal'/>
            <Replaces block='stone'/>
            <Replaces block='.*Stone'/> 
            <Biome name='.*'/>
        </StandardGenPreset>
-->

        <StandardGenPreset name='PresetStandardGen'>   
            <Description>
                A master preset for standardgen ore distributions.
            </Description>
        <IfCondition condition=':= (dimension.id != 0)' > 
            <Then>
                <Setting name='Size' range='0' avg=':= _C_ClusterSize * oreSize' />
                <Setting name='Frequency' range='0' avg=':= _C_ClusterFreq * oreFreq' />
            </Then> <Else>
                <Setting name='Size' range='0' avg=':= _C_ClusterSize * dim0oreSize' />
                <Setting name='Frequency' range='0' avg=':= _C_ClusterFreq * dim0oreFreq' />
            </Else>
        </IfCondition>
            <Setting name='Height' avg=':= 64/64 * dimension.groundLevel' range=':= 64/64 * dimension.groundLevel'/> 
            <Setting name='ParentRangeLimit' avg='32' range='32' type='normal'/>
            <Replaces block='stone'/>
            <Comment> 
                We also want to match "oredict equivalent" to stone, and we want to match underground biome's
                new types of stone. There is no "blockSet", like there is "biomeSet".
            </Comment>
            <Replaces block='.*Stone'/>     <!-- should match underground biomes -->
            <Biome name='.*'/>
            <IfCondition condition=':= dimension.generator.class = "ChunkProviderMyst"'>
                <Biome name='MushroomIsland.*' weight=':= _C_MushroomRate - 1'/>
            </IfCondition>
        </StandardGenPreset>

        <VeinsPreset name='PresetCOGLayeredVeins' branchType='Bezier'>  
            <Description>
                Small, fairly rare motherlodes with 2-4 horizontal veins each.
            </Description>
            <Setting name='MotherlodeHeight' avg=':= 32/64 * dimension.groundLevel' range=':= 16/64 * dimension.groundLevel' type='normal'/>
            <Setting name='MotherlodeRangeLimit' avg='32' range='32' type='normal'/>
        <IfCondition condition=':= (dimension.id != 0)' > 
                <Comment> Bad form to have numeric constants repeated like this. 
                            These need to be turned into constants like the cluster numbers were
                </Comment>
            <Then>
                <Setting name='MotherlodeFrequency' avg=':= 0.025 * oreFreq'/>
                <Setting name='MotherlodeSize' avg=':= 2.5 * oreSize' range=':= 1 * oreSize'/>
                <Setting name='BranchLength' avg=':= 120 * oreLength' range=':= 60 * oreLength'/> 
                <Setting name='SegmentRadius' avg=':= 0.5 * oreSize' range=':= 0.3 * oreSize'/>
            </Then> <Else>
                <Setting name='MotherlodeFrequency' avg=':= 0.025 * dim0oreFreq'/>
                <Setting name='MotherlodeSize' avg=':= 2.5 * dim0oreSize' range=':= 1 * dim0oreSize'/>
                <Setting name='BranchLength' avg=':= 120 * dim0oreLength' range=':= 60 * dim0oreLength'/> 
                <Setting name='SegmentRadius' avg=':= 0.5 * dim0oreSize' range=':= 0.3 * dim0oreSize'/>
        </Else> </IfCondition>
            <Setting name='BranchFrequency' avg='3' range='2'/> 
            <Setting name='BranchInclination' avg='0' range='0.55'/> 
            <Setting name='BranchHeightLimit' avg='16'/> 
            <Setting name='SegmentForkFrequency' avg='0.20'/>  
            <Setting name='SegmentForkLengthMult' avg='0.75' range='0.25' /> 
            <Setting name='SegmentLength' avg='15' range='6'/> 
            <Setting name='SegmentAngle' avg='0.50' range='0.50'/> 
            <Setting name='OreDensity' avg='1' range='0'/> 
            <Setting name='OreRadiusMult' avg='1.0' range='0.1'/> 
            <Replaces block='stone'/>
            <Replaces block='.*Stone'/>     <!-- should match underground biomes -->
            <Biome name='.*'/>
            <IfCondition condition=':= dimension.generator.class = "ChunkProviderMyst"'>
                    <Biome name='MushroomIsland.*' weight=':= _C_MushroomRate - 1'/>
            </IfCondition>
        </VeinsPreset>

            <Comment> Normal COG veins are fairly LARGE, and somewhat uncommon. While finding
                    them isn't that hard, there really isn't any resource shortage once you do
                    find them. The idea of the smaller veins is that you should have lots of
                    them, so finding them is not at all hard. But they are much smaller. Resources
                    should be available, but tight. 

                    Basically, this is an attempt to eliminate "spare doublechests of resources".
                    If you can build a full-height beacon with this distribution, then it should 
                    be a challenge, and not "easy". At the same time, it should be "hard", and
                    not "painful". Please report back on how well this balance is achieved.
            </Comment>
            <Comment> The size is cubic; half the size would be 1/8th as much ore. 2/3rds the size
                    should be 8/27th, or about 1/3rd the size.
                        Equally, cutting the base branches from quantity 3 +/- 2, down to 2 +/- 1,
                    should give 2/3rds the ores, and then cutting the branch length in half makes
                    the total ores from the branches to be about 1/3rd.
                            Error -- cutting the branch length in half does not account for the forks.
                    There are so many of them. Cut the branch length from 1/2 to 1/4th.
                        Finally, rasing the frequency up by 3 times as much brings the total ores
                    back to the same level, but now you are likely to miss some of the ore deposits.
                            Error -- some early testing shows that the additional length reduction
                     was actually too strong. Compensate with an increase in frequency to 4x.
                        Final result: Approximately the same level of ores in the world, but less
                    of them available at any time, as you have to search more caves to find it all
                    (and will likely miss some.)
                        NB: Ore radius is NOT changed; these are just shorter versions with smaller
                    motherlodes.
            </Comment>
            <Comment> Definition of "PresetSmallLayeredVeins" moved down, below "PresetLayeredVeins".
            </Comment>

        <Comment> We have to create the "PresetLayeredVeins". This turns out to be hard.

                What works -- not elegant -- is to duplicate the alterations of PresetSmallLayeredVeins
                as if() clauses. While this may seem odd, it is the only way to use the debugging
                commands to test what's happening, and the only way I could figure out to make sure
                that mystcraft age specific configs in the ores file could use both
        </Comment>

<Comment>
Should this be based on dimension 0 / not zero? 
Should this be based on mystcraft age / not a mystcraft age?
Should this be any "random level source" age -- note that excludes twilight forest

I don't have answers.
For now, I'm going to hardwire in the default of small veins in the overworld, random (50/50) for
mystcraft ages, and large veins for any other world. Feel free (PLEASE!) to give other ideas/suggestions.

Remember: some mods add in 5 different fixed dimensions. Some mods add in one dimension. 
Mystcraft is the oddball as it lets you add in as many dimensions as you want, and lets you customize
them for what you want. 
</Comment>

        <OptionChoice displayState='hidden' displayGroup='groupGeneral'>
            <Description> 
                Which layout of layered veins to use.
            </Description>
            <DisplayName>Ore Vein Type</DisplayName>
            <IfCondition condition=':= (dimension.id = 0)' > 
                <Then name='dim0veinSize' default='Small' />
                <Else name='veinSize' >
                <!-- Not overworld. Is it Mystcraft? -->
                    <IfCondition condition=':= dimension.generator.class = "ChunkProviderMyst"'>
                    <Then>
                        <!-- Config version 1: 50/50 choice -->
                        <IfCondition condition=':= world.nextRandom > 1/2'>
                            <Then default='COG' />
                            <Else default='Small' />
                        </IfCondition>
                    </Then>
                    <Else default='COG' />
                    </IfCondition>
                </Else>
            </IfCondition>
            <Choice value='COG' displayValue='Normal COG veins'/>
            <Choice value='Small' displayValue='Smaller, more frequent veins'/>
        </OptionChoice> 

        <!-- Now: We have "veinSize" or "dim0veinSize".
            They have values "COG" or "Small"
            We need to decide if "PresetLayeredVeins" is seen as 
                "PresetCOGLayeredVeins" or "PresetSmallLayeredVeins" -->

<!-- BUG! This is, at best, a band-aid. As written, it does not permit an age to select different
        sized veins for different ore types. -->

<!-- FAIL! This does not work. Has to be redone as if() statements in a single, non-conditional'd
preset. 

<IfCondition condition=':= (dimension.id != 0)' > 
    <Then>
        <IfCondition condition=':= veinSize = "COG"'>
            <Then>
                <VeinsPreset name='PresetLayeredVeins' inherits='PresetCOGLayeredVeins' />
            </Then> <Else>
                <VeinsPreset name='PresetLayeredVeins' inherits='PresetSmallLayeredVeins' />
        </Else> </IfCondition>
    </Then> <Else> 
        <Comment> Dimension 0 case </Comment>
        <IfCondition condition=':= dim0veinSize = "COG"'>
            <Then>
                <VeinsPreset name='PresetLayeredVeins' inherits='PresetCOGLayeredVeins' />
            </Then> <Else>
                <VeinsPreset name='PresetLayeredVeins' inherits='PresetSmallLayeredVeins' />
        </Else> </IfCondition>
    </Else>
</IfCondition>
-->

<Comment> As I'm reviewing this, I realize that there's a real simple alternative, that some people
might think is better. If, instead of all of this, there was just one set of config options,
such as frequencyMult, BranchMult, LodeSizeMult, and LengthMult - there is already a frequency
multiplayer, I've coded a length multiplier, so it's not that hard to finish that - this would allow
a single set of presets, rather than needing separate small-layered and COG-layered vein presets.

It would also avoid the whole headache that I'm dealing with here - the need to avoid an IfCondition
defining the preset inheritance.

What it fails at, as far as I could determine, was allowing a mystcraft age to have different
distributions for different veins. LayeredVeins and SparseVeins are used for iron, gold, and coal.
(Emeralds and diamonds use pipes; lapis and redstone use vertical veins). This system, while more
complex, will (eventually) permit an age to have small common veins for some, and large rarer veins
for others.
</Comment>

<!-- Testing shows that segment length has to scale as well. Simply put: Distributions that expect
to fork more, to give more ores as distance increase, will not fork as much with shorter branches
and the same distance per fork. -->

    <IfCondition condition=':= (dimension.id != 0)' > 
    <Then>
        <!-- MSize 2/3, BL 1/3, Fork 7/6, Mult 1/3 -->
        <VeinsPreset name='PresetLayeredVeins' inherits='PresetCOGLayeredVeins'>
            <Setting name='MotherlodeFrequency' avg=':= if (veinSize="Small", 2.150, 1) * _default_'/>
            <Setting name='MotherlodeSize'      avg=':= if (veinSize="Small", 2/3, 1) * _default_'
                                              range=':= if (veinSize="Small", 1/2, 1) * _default_'/>
            <Setting name='BranchLength'        avg=':= if (veinSize="Small", 1/3, 1) * _default_'
                                              range=':= if (veinSize="Small", 1/3, 1) * _default_'/> 
           <Setting name='SegmentForkFrequency' avg=':= if (veinSize="Small", 7/6, 1) * _default_'/>
          <Setting name='SegmentForkLengthMult' avg=':= if (veinSize="Small", 1/3, 1) * _default_'
                                              range=':= if (veinSize="Small", 1/3, 1) * _default_'/>
        </VeinsPreset>
    </Then> <Else>
        <VeinsPreset name='PresetLayeredVeins' inherits='PresetCOGLayeredVeins'>
            <Setting name='MotherlodeFrequency' avg=':= if (dim0veinSize="Small", 2.15, 1) * _default_'/>
            <Setting name='MotherlodeSize'      avg=':= if (dim0veinSize="Small", 2/3, 1) * _default_'
                                              range=':= if (dim0veinSize="Small", 1/2, 1) * _default_'/>
            <Setting name='BranchLength'        avg=':= if (dim0veinSize="Small", 1/3, 1) * _default_'
                                              range=':= if (dim0veinSize="Small", 1/3, 1) * _default_'/> 
           <Setting name='SegmentForkFrequency' avg=':= if (dim0veinSize="Small", 7/6, 1) * _default_'/>
          <Setting name='SegmentForkLengthMult' avg=':= if (dim0veinSize="Small", 1/3, 1) * _default_'
                                              range=':= if (dim0veinSize="Small", 1/3, 1) * _default_'/>
        </VeinsPreset>
    </Else> </IfCondition>

        <Comment> This was moved down here; "spacing" should make the reason obvious. </Comment>

        <VeinsPreset name='PresetSmallLayeredVeins' inherits='PresetCOGLayeredVeins'>
            <Setting name='MotherlodeFrequency' avg=':=                           2.15    * _default_'/>
            <Setting name='MotherlodeSize'      avg=':=                           2/3     * _default_'
                                              range=':=                           1/2     * _default_'/>
            <Setting name='BranchLength'        avg=':=                           1/3     * _default_'
                                              range=':=                           1/3     * _default_'/> 
           <Setting name='SegmentForkFrequency' avg=':=                           7/6     * _default_'/>
          <Setting name='SegmentForkLengthMult' avg=':=                           1/3     * _default_'
                                              range=':=                           1/3     * _default_'/>
        </VeinsPreset>

        <VeinsPreset name='PresetVerticalVeins' branchType='Bezier'>     
            <Description> 
                Single vertical veins that occur with no motherlodes.
                Starts high, and goes down.
                Frequency and length adjust based on ground height; shorter ground has
                   more of them, and each one is shorter to fit.
            </Description>  
            <Setting name='MotherlodeSize' avg='0' range='0'/>
            <Setting name='MotherlodeHeight' avg=':= 76/64 * dimension.groundLevel' range='4'/>
            <Setting name='MotherlodeRangeLimit' avg='32' range='32' type='normal'/>
        <IfCondition condition=':= (dimension.id != 0)' > 
            <Then>
                <Setting name='MotherlodeFrequency' avg=':= 0.080 * oreFreq * 64/dimension.groundLevel' />
                <Setting name='BranchLength' avg=':= 48/64 * dimension.groundLevel * oreLength'
                                                                range=':= 16 * oreLength' type='normal'/> 
                <Setting name='SegmentRadius' avg=':= 0.30 * oreSize' range=':= 0.1 * oreSize'/> 
            </Then> <Else>
                <Setting name='MotherlodeFrequency' avg=':= 0.080 * dim0oreFreq * 64/dimension.groundLevel' />
                <Setting name='BranchLength' avg=':= 48/64 * dimension.groundLevel * dim0oreLength'
                                                                range=':= 16 * dim0oreLength' type='normal'/> 
                <Setting name='SegmentRadius' avg=':= 0.30 * dim0oreSize' range=':= 0.1 * dim0oreSize'/> 

            </Else>
        </IfCondition>
            <Setting name='BranchFrequency' avg='1' range='0'/>
            <Setting name='BranchInclination' avg='-1.31' range='0.22'/>
            <Setting name='BranchHeightLimit' avg='1000'/> 
            <Setting name='SegmentForkFrequency' avg='0.10'/>  
            <Setting name='SegmentAngle' avg='0' range='0.3'/>
            <Setting name='SegmentLength' avg='8' range='4' type='normal'/> 
            <Setting name='OreDensity' avg='1' range='0'/>
            <Setting name='OreRadiusMult' avg='1.0' range='0.1'/> 
            <Replaces block='stone'/>
            <Replaces block='.*Stone'/>     <!-- should match underground biomes -->
            <Biome name='.*'/>
            <IfCondition condition=':= dimension.generator.class = "ChunkProviderMyst"'>
                    <Biome name='MushroomIsland.*' weight=':= _C_MushroomRate - 1'/>
            </IfCondition>
        </VeinsPreset>
        
        <VeinsPreset name='PresetSmallDeposits'>
            <Description> 
                Small motherlodes without any branches.
                Similar to the deposits produced by StandardGen distributions.
            </Description>        
        <IfCondition condition=':= (dimension.id != 0)' > 
            <Then>
                <Setting name='MotherlodeFrequency' avg=':= 1.0 * oreFreq' range=':= 0.3 * oreFreq'/>
                <Setting name='MotherlodeSize' avg=':= 0.9 * oreSize' range=':= 0.3 * oreSize'/>
            </Then> <Else>
                <Setting name='MotherlodeFrequency' avg=':= 1.0 * dim0oreFreq' range=':= 0.3 * dim0oreFreq'/>
                <Setting name='MotherlodeSize' avg=':= 0.9 * dim0oreSize' range=':= 0.3 * dim0oreSize'/>
            </Else>
        </IfCondition>
            <Setting name='MotherlodeHeight' avg=':= 32/64 * dimension.groundLevel'
                                           range=':= 16/64 * dimension.groundLevel' type='normal'/>
            <Setting name='MotherlodeRangeLimit' avg='32' range='32' type='normal'/>
            <Setting name='BranchFrequency' avg='0' range='0'/>
            <Setting name='OreDensity' avg='1' range='0'/>
            <Setting name='OreRadiusMult' avg='1.0' range='0.1'/> 
            <Replaces block='stone'/>
            <Replaces block='.*Stone'/>     <!-- should match underground biomes -->
            <Biome name='.*'/>
            <IfCondition condition=':= dimension.generator.class = "ChunkProviderMyst"'>
                    <Biome name='MushroomIsland.*' weight=':= _C_MushroomRate - 1'/>
            </IfCondition>
        </VeinsPreset>
        
        <VeinsPreset name='PresetLavaDeposits'>
            <Description> 
                Small motherlodes without any branches.  Instead of spawning in stone,
                these will only spawn in lava pools near the bottom of the map.
                Note that these lava pools are produced by the vanilla cave generator - any mod
                that changes or removes cave generation will indirectly affect these deposits.
            </Description>          
            <Setting name='MotherlodeHeight' avg='8' range='8' type='uniform'/>
            <Setting name='MotherlodeRangeLimit' avg='32' range='32' type='normal'/>
        <IfCondition condition=':= (dimension.id != 0)' > 
            <Then>
                <Setting name='MotherlodeFrequency' avg=':= 6.0 * oreFreq' range=':= 2.0 * oreFreq'/>
                <Setting name='MotherlodeSize' avg=':= 1.5 * oreSize' range=':= 0.8 * oreSize'/>
            </Then> <Else>
                <Setting name='MotherlodeFrequency' avg=':= 6.0 * dim0oreFreq' range=':= 2.0 * dim0oreFreq'/>
                <Setting name='MotherlodeSize' avg=':= 1.5 * dim0oreSize' range=':= 0.8 * dim0oreSize'/>
            </Else>
        </IfCondition>
            <Setting name='BranchFrequency' avg='0' range='0'/> 
            <Setting name='OreDensity' avg='1' range='0'/>
            <Setting name='OreRadiusMult' avg='1.0' range='0.1'/> 
            <Replaces block='lava'/>
            <Biome name='.*'/>
            <IfCondition condition=':= dimension.generator.class = "ChunkProviderMyst"'>
                    <Biome name='MushroomIsland.*' weight=':= _C_MushroomRate - 1'/>
            </IfCondition>
        </VeinsPreset>
        
        <VeinsPreset name='PresetHugeVeins' branchType='Bezier'>
            <Description>
                Very large, extremely rare motherlodes.  Each motherlode has many long slender branches - so thin that
                parts of the branch won't contain any ore at all.  This, combined with the incredible length of the
                branches, makes them more challenging to follow underground.  Once found, however, a motherlode contains
                enough ore to keep a player supplied for a very long time.
                The rarity of these veins might be too frustrating in a single-player setting.  In SMP, though, teamwork 
                could make finding them much easier and the motherlodes are big enough to supply several people without
                shortage.  This might be a good way to add challenge to multiplayer worlds.
                Credit: based on feedback by dyrewulf from the MC forums.
            </Description>  

    <Comment> ** Original uses "oreSize" for deterining length of the veins.
                Now use both oreSize and oreLength.
    </Comment>

            <Setting name='MotherlodeHeight' avg=':= 45/64 * dimension.groundLevel'
                                            range=':= 9/64 * dimension.groundLevel' type='normal'/>
            <Setting name='MotherlodeRangeLimit' avg='32' range='32' type='normal'/>
        <IfCondition condition=':= (dimension.id != 0)' > 
            <Then>
                <Setting name='MotherlodeFrequency' avg=':= 0.00025 * oreFreq'/>
                <Setting name='MotherlodeSize' avg=':= 10 * oreSize' range=':= 6 * oreSize' type='normal'/>
                <Setting name='BranchLength' avg=':= 500 * oreSize * oreLength'
                                            range=':= 400 * oreSize * oreLength' type='normal'/>
                <Setting name='SegmentLength' avg=':= 30 * oreSize' range=':= 6 * oreSize' />
                <Setting name='SegmentRadius' avg=':= 0.025 * oreSize' range=':= 0.2 * oreSize'/>
            </Then> <Else>
                <Setting name='MotherlodeFrequency' avg=':= 0.00025 * dim0oreFreq'/>
                <Setting name='MotherlodeSize' avg=':= 10 * dim0oreSize' range=':= 6 * dim0oreSize' type='normal'/>
                <Setting name='BranchLength' avg=':= 500 * dim0oreSize * dim0oreLength'
                                            range=':= 400 * dim0oreSize * dim0oreLength' type='normal'/>
                <Setting name='SegmentLength' avg=':= 30 * dim0oreSize' range=':= 6 * dim0oreSize' />
                <Setting name='SegmentRadius' avg=':= 0.025 * dim0oreSize' range=':= 0.2 * dim0oreSize'/>
            </Else>
        </IfCondition>
            <Setting name='BranchFrequency' avg='8' range='4'/>
            <Setting name='BranchInclination' avg='0.7' range='0.85'/>
            <Setting name='BranchHeightLimit' avg='1000'/>
            <Setting name='SegmentForkFrequency' avg='0.02'/>
            <Setting name='SegmentForkLengthMult' avg='0.5' range='0.25'/>
            <Setting name='SegmentAngle' avg='0.30' range='0.30'/>
            <Setting name='OreDensity' avg='1' range='0'/>
            <Setting name='OreRadiusMult' avg='1' range='0.25'/>
            <Replaces block='stone'/>
            <Replaces block='.*Stone'/>     <!-- should match underground biomes -->
            <Replaces block='grass'/>
            <Replaces block='dirt'/>
            <Replaces block='sand'/>
            <Replaces block='gravel'/>
            <Replaces block='sandstone'/>
            <Biome name='.*'/>
            <IfCondition condition=':= dimension.generator.class = "ChunkProviderMyst"'>
                    <Biome name='MushroomIsland.*' weight=':= _C_MushroomRate - 1'/>
            </IfCondition>
        </VeinsPreset>
        
        <VeinsPreset name='PresetHintVeins'>
            <Description>
                Single blocks, generously scattered through all heights (density is about that of vanilla iron ore). 
                They will replace dirt and sandstone (but not grass or sand), so they can be found nearer 
                to the surface than most ores.  Intened to be used as a child distribution for large, rare strategic 
                deposits that would otherwise be very difficult to find.
                Note that the frequency is multiplied by ground level to maintain a constant density, but not by
                ore frequency because it is assumed that the frequency of the parent distribution will already
                be scaled by that.
            </Description>  
            <Setting name='MotherlodeFrequency' avg=':= 80 * dimension.groundLevel/64'
                                                range=':= 30 * dimension.groundLevel/64'/>
            <Setting name='MotherlodeSize' avg='0.6' range='0'/>
            <Setting name='MotherlodeHeight' avg=':= 50/64 * dimension.groundLevel'
                                                range=':= 46/64 * dimension.groundLevel'/>
        <IfCondition condition=':= (dimension.id != 0)' > 
            <Then>
                <Setting name='MotherlodeRangeLimit' avg=':= 45 * oreSize' range=':= 30 * oreSize' type='uniform'/>
            </Then> <Else>
                <Setting name='MotherlodeRangeLimit' avg=':= 45 * dim0oreSize' range=':= 30 * dim0oreSize' type='uniform'/>
            </Else>
        </IfCondition>
            <Setting name='BranchFrequency' avg='0' range='0'/> 
            <Setting name='OreDensity' avg='1' range='0'/>
            <Setting name='OreRadiusMult' avg='1.0' range='0'/> 
            <Replaces block='stone'/>
            <Replaces block='.*Stone'/>     <!-- should match underground biomes -->
            <Replaces block='dirt'/>
            <Replaces block='gravel'/>
            <Replaces block='sandstone'/>
            <Biome name='.*'/>
            <IfCondition condition=':= dimension.generator.class = "ChunkProviderMyst"'>
                    <Biome name='MushroomIsland.*' weight=':= _C_MushroomRate - 1'/>
            </IfCondition>
        </VeinsPreset>
        
        <VeinsPreset name='PresetCOGSparseVeins' branchType='Bezier'>     
            <Description>
                Large veins filled very lightly with ore.  Because they contain less ore per volume, 
                these veins are relatively wide and long.  Mining the ore from them is time consuming 
                compared to solid ore veins.  They are also more difficult to follow, since it is 
                harder to get an idea of their direction while mining.
            </Description>
            <Setting name='MotherlodeHeight' avg=':= 32/64 * dimension.groundLevel'
                                            range=':= 32/64 * dimension.groundLevel' type='uniform'/>
            <Setting name='MotherlodeRangeLimit' avg='32' range='32' type='normal'/>
        <IfCondition condition=':= (dimension.id != 0)' > 
            <Then>
                <Setting name='MotherlodeFrequency' avg=':= 0.0065 * oreFreq'/>            
                <Setting name='MotherlodeSize' avg=':= 2.3 * oreSize' range=':= 0.5 * oreSize'/>
                <Setting name='BranchLength' avg=':= 180 * oreLength' range=':= 90 * oreLength'/> 
                <Setting name='SegmentRadius' avg=':= 2.0 * oreSize' range=':= 1.0 * oreSize'/> 
            </Then> <Else>
                <Setting name='MotherlodeFrequency' avg=':= 0.0065 * dim0oreFreq'/>            
                <Setting name='MotherlodeSize' avg=':= 2.3 * dim0oreSize' range=':= 0.5 * dim0oreSize'/>
                <Setting name='BranchLength' avg=':= 180 * dim0oreLength' range=':= 90 * dim0oreLength'/> 
                <Setting name='SegmentRadius' avg=':= 2.0 * dim0oreSize' range=':= 1.0 * dim0oreSize'/> 
            </Else>
        </IfCondition>
            <Setting name='BranchFrequency' avg='1' range='0'/> 
            <Setting name='BranchInclination' avg='0' range='0.75'/> 
            <Setting name='BranchHeightLimit' avg='1000'/>
            <Setting name='SegmentForkFrequency' avg='0' range='0'/> 
            <Setting name='SegmentForkLengthMult' avg='0' range='0'/> 
            <Setting name='SegmentLength' avg='20' range='8'/>
            <Setting name='SegmentAngle' avg='0.35' range='0.35'/> 
            <Setting name='OreDensity' avg='0.04' range='0'/>
            <Setting name='OreRadiusMult' avg='1.0' range='0.1'/> 
            <Replaces block='stone'/>
            <Replaces block='.*Stone'/>     <!-- should match underground biomes -->
            <Biome name='.*'/>
            <IfCondition condition=':= dimension.generator.class = "ChunkProviderMyst"'>
                    <Biome name='MushroomIsland.*' weight=':= _C_MushroomRate - 1'/>
            </IfCondition>
        </VeinsPreset>


<Comment> We don't have a branch frequency adjustment here. Sparseveins are always a single
branch. Motherlodes are essentially nothing. So we just have shorter lengths. Our target is
2.225 times more common occurance/smaller distribution. (Note: no forks either.) </Comment>

    <IfCondition condition=':= (dimension.id != 0)' > 
    <Then>
        <VeinsPreset name='PresetSparseVeins' inherits='PresetCOGSparseVeins'>     
            <Setting name='MotherlodeFrequency' avg=':= if (veinSize="Small", 2.15, 1) * _default_'/>
            <Setting name='MotherlodeSize'      avg=':= if (veinSize="Small",  1 , 1) * _default_'
                                              range=':= if (veinSize="Small",  1 , 1) * _default_'/>
            <Setting name='BranchLength'        avg=':= if (veinSize="Small", 1/3, 1) * _default_'
                                              range=':= if (veinSize="Small", 1/3, 1) * _default_'/> 
        </VeinsPreset>
    </Then> <Else>
        <VeinsPreset name='PresetSparseVeins' inherits='PresetCOGSparseVeins'>     
            <Setting name='MotherlodeFrequency' avg=':= if (dim0veinSize="Small", 2.15, 1) * _default_'/>
            <Setting name='MotherlodeSize'      avg=':= if (dim0veinSize="Small",  1 , 1) * _default_'
                                              range=':= if (dim0veinSize="Small",  1 , 1) * _default_'/>
            <Setting name='BranchLength'        avg=':= if (dim0veinSize="Small", 1/3, 1) * _default_'
                                              range=':= if (dim0veinSize="Small", 1/3, 1) * _default_'/> 
        </VeinsPreset>
    </Else> </IfCondition>

        <VeinsPreset name='PresetSmallSparseVeins' inherits='PresetCOGSparseVeins'>     
            <Setting name='MotherlodeFrequency' avg=':=                           2.15   * _default_'/>
            <Setting name='MotherlodeSize'      avg=':=                            1      * _default_'
                                              range=':=                            1      * _default_'/>
            <Setting name='BranchLength'        avg=':=                           1/3     * _default_'
                                              range=':=                           1/3     * _default_'/> 
        </VeinsPreset>

        <VeinsPreset name='PresetPipeVeins' branchType='Bezier'>     
            <Description>
                Short sparsely filled veins sloping up from near the bottom of the map.
            </Description>
            <Setting name='MotherlodeHeight' avg=':= 8/64 * dimension.groundLevel'
                                            range=':= 8/64 * dimension.groundLevel' type='uniform'/>
            <Setting name='MotherlodeRangeLimit' avg='32' range='32' type='normal'/>
        <IfCondition condition=':= (dimension.id != 0)' > 
            <Then>
                <Setting name='MotherlodeFrequency' avg=':= 0.06 * oreFreq'/>            
                <Setting name='MotherlodeSize' avg=':= 2.3 * oreSize' range=':= 0.5 * oreSize'/>
                <Setting name='BranchLength' avg=':= 40 * oreLength' range=':= 10 * oreLength'/>
                <Setting name='SegmentRadius' avg=':= 2.0 * oreSize' range=':= 0.5 * oreSize'/> 
            </Then> <Else>
                <Setting name='MotherlodeFrequency' avg=':= 0.06 * dim0oreFreq'/>            
                <Setting name='MotherlodeSize' avg=':= 2.3 * dim0oreSize' range=':= 0.5 * dim0oreSize'/>
                <Setting name='BranchLength' avg=':= 40 * dim0oreLength' range=':= 10 * dim0oreLength'/>
                <Setting name='SegmentRadius' avg=':= 2.0 * dim0oreSize' range=':= 0.5 * dim0oreSize'/> 
            </Else>
        </IfCondition>
            <Setting name='BranchFrequency' avg='1' range='0'/> 
            <Setting name='BranchInclination' avg='0.75' range='0.7' type='normal'/>
            <Setting name='BranchHeightLimit' avg='1000'/>
            <Setting name='SegmentForkFrequency' avg='0' range='0'/> 
            <Setting name='SegmentForkLengthMult' avg='0' range='0'/> 
            <Setting name='SegmentLength' avg='8' range='3'/>
            <Setting name='SegmentAngle' avg='0' range='0.25'/> 
            <Setting name='OreDensity' avg='0.04' range='0'/>
            <Setting name='OreRadiusMult' avg='1.0' range='0.1'/> 
            <Replaces block='stone'/>
            <Replaces block='.*Stone'/>     <!-- should match underground biomes -->
            <Biome name='.*'/>
            <IfCondition condition=':= dimension.generator.class = "ChunkProviderMyst"'>
                    <Biome name='MushroomIsland.*' weight=':= _C_MushroomRate - 1'/>
            </IfCondition>
        </VeinsPreset>         

        <CloudPreset name='PresetStrategicCloud'>
            <Description>
                Large irregular clouds filled lightly with ore.  These are huge, spanning several 
                adjacent chunks, and consequently rather rare.  They contain a sizeable amount of
                ore, but it takes some time and effort to mine due to low density.
                The intent for strategic clouds is that the player will need to actively search for
                one and then set up a semi-permanent mining base and spend some time actually mining
                the ore.
            </Description>
        <IfCondition condition=':= (dimension.id != 0)' > 
            <Then>
                <Setting name='DistributionFrequency' avg=':= 0.001 * oreFreq'/>
                <Setting name='CloudRadius' avg=':= 25 * oreSize' range=':= 10 * oreSize'/>
                <Setting name='CloudThickness' avg=':= 14 * oreSize' range=':= 6 * oreSize'/>
            </Then> <Else>
                <Setting name='DistributionFrequency' avg=':= 0.001 * dim0oreFreq'/>
                <Setting name='CloudRadius' avg=':= 25 * dim0oreSize' range=':= 10 * dim0oreSize'/>
                <Setting name='CloudThickness' avg=':= 14 * dim0oreSize' range=':= 6 * dim0oreSize'/>
            </Else>
        </IfCondition>
            <Setting name='CloudSizeNoise' avg='0.2'/>
            <Setting name='CloudHeight' avg=':= 32/64 * dimension.groundLevel'
                                        range=':= 16/64 * dimension.groundLevel' type='normal'/>
            <Setting name='CloudInclination' avg='0' range='0.35'/>
            <Setting name='OreRadiusMult' avg='1' range='0.1'/>
            <Setting name='OreDensity' avg='0.1'/>
            <Setting name='OreVolumeNoiseCutoff' avg='0.5'/> 
            <Setting name='ParentRangeLimit' avg='32' range='32' type='normal'/>
            <Replaces block='stone'/>
            <Replaces block='.*Stone'/>     <!-- should match underground biomes -->
            <Biome name='.*'/>
            <IfCondition condition=':= dimension.generator.class = "ChunkProviderMyst"'>
                    <Biome name='MushroomIsland.*' weight=':= _C_MushroomRate - 1'/>
            </IfCondition>
        </CloudPreset>
        
    </ConfigSection>
    
    <!--****************************   Standard Ores   *************************************
    *   Import the standard ores module, containing options, presets, and distributions
    *   for coal, iron, gold, redstone, diamond, lapis lazuli, and emeralds.
    *************************************************************************************-->
    <OptionalImport file='CustomOreGen Standard Modules/MinecraftOres.xml'/>
    
    <!--*******************************   Mod Ores   ***************************************
    *   Import modules for supported mods if they are present.
    *************************************************************************************-->
    <OptionalImport file='CustomOreGen Standard Modules/IndustrialCraft2.xml'/>
    <OptionalImport file='CustomOreGen Standard Modules/Forestry.xml'/>
    <OptionalImport file='CustomOreGen Standard Modules/Redpower2.xml'/>

    <!--************************   User-added Distributions   ******************************
    *   If you add your own distributions, you can put them here.
    *   You can also put them in a seperate file in the "CustomOreGen Extra Modules" folder.
    *************************************************************************************-->
    <OptionalImport file='CustomOreGen Extra Modules/*.xml'/>
    
    <!--*************************   Testing & Debugging   **********************************
    *   I use this section for quick-and-dirty experiments
    *************************************************************************************-->
    <IfChoice name='debugDist' value='true'>
       
        <!-- Experimental distributions should go here -->
        
    </IfChoice>
    
</Config>

